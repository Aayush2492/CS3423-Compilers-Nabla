primary_exp -> i
postfix_exp -> primary_exp
unary_exp -> postfix_exp
assign_op -> =
constant -> 0
primary_exp -> constant
postfix_exp -> primary_exp
unary_exp -> postfix_exp
cast_exp -> unary_exp
mult_exp -> cast_exp
add_exp -> mult_exp
shift_exp -> add_exp
rel_exp -> shift_exp
equ_exp -> rel_exp
and_exp -> equ_exp
excl_or_exp -> and_exp
incl_or_exp -> excl_or_exp
log_and_exp -> incl_or_exp
log_or_exp -> log_and_exp
cond_exp -> log_or_exp
assign_exp -> cond_exp
assign_exp -> unary_exp assign_op assign_exp
exp -> assign_exp
exp_stmt -> exp ;
primary_exp -> i
postfix_exp -> primary_exp
unary_exp -> postfix_exp
cast_exp -> unary_exp
mult_exp -> cast_exp
add_exp -> mult_exp
shift_exp -> add_exp
rel_exp -> shift_exp
constant -> 35
primary_exp -> constant
postfix_exp -> primary_exp
unary_exp -> postfix_exp
cast_exp -> unary_exp
mult_exp -> cast_exp
add_exp -> mult_exp
shift_exp -> add_exp
rel_exp -> rel_exp < shift_exp
equ_exp -> rel_exp
and_exp -> equ_exp
excl_or_exp -> and_exp
incl_or_exp -> excl_or_exp
log_and_exp -> incl_or_exp
log_or_exp -> log_and_exp
cond_exp -> log_or_exp
assign_exp -> cond_exp
exp -> assign_exp
exp_stmt -> exp ;
primary_exp -> i
postfix_exp -> primary_exp
postfix_exp -> postfix_exp ++
unary_exp -> postfix_exp
cast_exp -> unary_exp
mult_exp -> cast_exp
add_exp -> mult_exp
shift_exp -> add_exp
rel_exp -> shift_exp
equ_exp -> rel_exp
and_exp -> equ_exp
excl_or_exp -> and_exp
incl_or_exp -> excl_or_exp
log_and_exp -> incl_or_exp
log_or_exp -> log_and_exp
cond_exp -> log_or_exp
assign_exp -> cond_exp
exp -> assign_exp
primary_exp -> a
postfix_exp -> primary_exp
unary_exp -> postfix_exp
assign_op -> =
primary_exp -> a
postfix_exp -> primary_exp
unary_exp -> postfix_exp
cast_exp -> unary_exp
mult_exp -> cast_exp
add_exp -> mult_exp
constant -> 1
primary_exp -> constant
postfix_exp -> primary_exp
unary_exp -> postfix_exp
cast_exp -> unary_exp
mult_exp -> cast_exp
add_exp -> add_exp + mult_exp
shift_exp -> add_exp
rel_exp -> shift_exp
equ_exp -> rel_exp
and_exp -> equ_exp
excl_or_exp -> and_exp
incl_or_exp -> excl_or_exp
log_and_exp -> incl_or_exp
log_or_exp -> log_and_exp
cond_exp -> log_or_exp
assign_exp -> cond_exp
assign_exp -> unary_exp assign_op assign_exp
exp -> assign_exp
exp_stmt -> exp ;
stmt -> exp_stmt
state_list -> stmt
comp_stmt -> stmt_list 
stmt -> comp_stmt
iter_stmt -> loop (exp_stmt exp_stmt exp) stmt
stmt -> iter_statementist
state_list -> stmt
comp_stmt -> stmt_list 
